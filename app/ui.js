// Generated by CoffeeScript 1.10.0
var canvas_init, ui_init, update_beat_labels;

canvas_init = function() {
  $("#node-canvas").droppable({
    hoverClass: "node-canvas-hover",
    tolerance: "pointer",
    scope: "tray",
    drop: function(evt, ui) {
      var i, new_sn, sn;
      if (ui.draggable.hasClass("node-wrapper")) {
        if (!ui.draggable.hasClass("on-canvas")) {
          return ui.draggable.clone().appendTo("#node-canvas").addClass("on-canvas").draggable({
            helper: "original",
            scope: "canvas"
          }).droppable({
            scope: "canvas",
            tolerance: "pointer",
            drop: function(evt, ui) {
              var loc;
              if ($(this).parent().is("#node-canvas")) {
                loc = $(this).children().last();
              } else {
                loc = $(this).parent().children().last();
              }
              return ui.draggable.appendTo($(this)).position({
                of: loc,
                my: "top",
                at: "bottom"
              });
            }
          });
        }
      } else {
        sn = ui.draggable.data("SoundNode");
        new_sn = new SoundNode(sn.instrument);
        SoundNode.canvas_instances.push(new_sn);
        i = new_sn.instrument;
        i.is_live = true;
        if (!ui.draggable.hasClass("on-canvas")) {
          return ui.draggable.clone().appendTo($("#node-canvas")).addClass("on-canvas").draggable({
            helper: "original",
            scope: "canvas"
          }).data("SoundNode", new_sn);
        }
      }
    }
  });
  return $("#node-tray").droppable({
    scope: "canvas",
    drop: function(evt, ui) {
      var sn;
      sn = ui.draggable.find(".node-sample").data("SoundNode");
      sn.is_live = false;
      return ui.draggable.remove();
    }
  });
};

ui_init = function() {
  var j, len, n, ref;
  canvas_init();
  ref = SoundNode.tray_instances;
  for (j = 0, len = ref.length; j < len; j++) {
    n = ref[j];
    $(n.html).appendTo($("#node-tray")).data("SoundNode", n);
  }
  $(".node").draggable({
    helper: "clone",
    scope: "tray"
  });
  $(".node").each(function(index, element) {
    var btn;
    btn = $(element).find("button");
    return btn.on("click", function() {});
  });
  return $("<div class=\"node node-wrapper\" id=\"wrapper\">\n  <h2>wrapper</h2>\n</div>").appendTo($("#node-tray")).draggable({
    scope: "tray",
    helper: "clone"
  }).addClass("node-wrapper").removeClass("node-sample");
};

update_beat_labels = function() {
  return $("#beat_label").text(phrase + ":" + beat);
};
